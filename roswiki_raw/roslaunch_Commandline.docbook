<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>roslaunch/Commandline Tools</title><revhistory><revision><revnumber>40</revnumber><date>2013-06-24 17:12:39</date><authorinitials>davetcoleman</authorinitials><revremark>Removed notes about old versions being new</revremark></revision><revision><revnumber>39</revnumber><date>2011-05-23 20:51:27</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>38</revnumber><date>2011-05-23 20:51:13</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>37</revnumber><date>2011-01-21 18:14:04</date><authorinitials>MikePurvis</authorinitials><revremark>Fix a small typo.</revremark></revision><revision><revnumber>36</revnumber><date>2011-01-04 01:23:52</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>35</revnumber><date>2010-09-04 04:35:08</date><authorinitials>TimField</authorinitials></revision><revision><revnumber>34</revnumber><date>2010-07-27 23:16:27</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>33</revnumber><date>2010-07-27 23:16:12</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>32</revnumber><date>2010-04-21 02:51:55</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>31</revnumber><date>2010-04-07 00:50:03</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>30</revnumber><date>2010-02-03 20:05:13</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>29</revnumber><date>2010-02-03 20:04:55</date><authorinitials>KenConley</authorinitials><revremark>undoing changes done by Edit GUI in favor of targeted typo fixes</revremark></revision><revision><revnumber>28</revnumber><date>2010-02-03 19:29:32</date><authorinitials>DanLazewatsky</authorinitials></revision><revision><revnumber>27</revnumber><date>2010-01-19 03:25:00</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>26</revnumber><date>2010-01-19 03:24:21</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>25</revnumber><date>2010-01-19 03:24:05</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>24</revnumber><date>2010-01-19 03:22:48</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>23</revnumber><date>2010-01-12 02:11:37</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>22</revnumber><date>2010-01-11 22:37:26</date><authorinitials>EthanDreyfuss</authorinitials></revision><revision><revnumber>21</revnumber><date>2009-12-08 03:32:00</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>20</revnumber><date>2009-10-08 23:41:21</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>19</revnumber><date>2009-10-08 23:38:40</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>18</revnumber><date>2009-10-08 23:38:17</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>17</revnumber><date>2009-10-08 23:38:04</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>16</revnumber><date>2009-10-08 23:37:40</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>15</revnumber><date>2009-10-08 23:37:16</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>14</revnumber><date>2009-10-08 23:36:49</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>13</revnumber><date>2009-10-08 23:36:17</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>12</revnumber><date>2009-10-08 23:35:37</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>11</revnumber><date>2009-10-08 23:28:29</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>10</revnumber><date>2009-08-26 23:40:56</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>9</revnumber><date>2009-08-21 22:14:45</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>8</revnumber><date>2009-08-21 22:14:30</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>7</revnumber><date>2009-08-21 16:21:21</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>6</revnumber><date>2009-08-18 03:39:59</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>5</revnumber><date>2009-08-18 03:39:50</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>4</revnumber><date>2009-08-18 03:33:41</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>3</revnumber><date>2009-08-18 03:33:12</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>2</revnumber><date>2009-08-18 03:32:52</date><authorinitials>KenConley</authorinitials></revision><revision><revnumber>1</revnumber><date>2009-08-18 03:31:47</date><authorinitials>KenConley</authorinitials></revision></revhistory></articleinfo><para>The <ulink url="http://wiki.ros.org/roslaunch/Commandline%20Tools/roslaunch#">roslaunch</ulink> package comes with <code>roslaunch</code> tool as well as several support tools to assist in the process of launching ROS <ulink url="http://wiki.ros.org/roslaunch/Commandline%20Tools/Nodes#">Nodes</ulink>.  </para><section><title>roslaunch</title><para><code>roslaunch</code> is an important tool that manages the start and stop of ROS <ulink url="http://wiki.ros.org/roslaunch/Commandline%20Tools/Nodes#">nodes</ulink>. It takes one or more <code>.launch</code> files as arguments.  </para><section><title>Launch syntax</title><para>Most <code>roslaunch</code> command require the name of a launch file. You can either specify the file path of the launch file, or you can specify a package name and launch file in that package, e.g.  </para><itemizedlist><listitem override="none"><screen><![CDATA[$ roslaunch roslaunch example.launch]]></screen><para>or </para><screen><![CDATA[$ roscd roslaunch
$ roslaunch example.launch]]></screen></listitem></itemizedlist><para><code>roslaunch &lt;package-name&gt; &lt;launch-filename&gt; [args]</code> </para><itemizedlist><listitem override="none"><para>Launch <code>&lt;launch-filename&gt;</code> located in <code>&lt;package-name&gt;</code>, e.g.: </para><screen><![CDATA[$ roslaunch rospy_tutorials talker_listener.launch]]></screen><para><code>roslaunch</code> will find a file with the matching name inside the specified package and run it.  </para></listitem></itemizedlist><para><code>roslaunch &lt;launch-file-path&gt; [args]</code> </para><itemizedlist><listitem override="none"><para>Launch the file specified by the file path, e.g.</para><screen><![CDATA[$ roslaunch pr2_robot/pr2_bringup/pr2.launch]]></screen></listitem></itemizedlist><para><code>-p port</code> </para><itemizedlist><listitem override="none"><para>If you launched <code>roscore</code> on a different port using the <code>-p</code> option, you need to pass in the <code>-p</code> flag to roslaunch as well, e.g. </para><screen><![CDATA[$ roslaunch -p 1234 package filename.launch]]></screen><para> This will dynamically override the port setting in your <code>ROS_MASTER_URI</code>.</para></listitem></itemizedlist><para><code>--wait</code> </para><itemizedlist><listitem override="none"><para>Delay the launch until a <code>roscore</code> is detected. </para></listitem></itemizedlist><para><code>--local</code> </para><itemizedlist><listitem override="none"><para>Launch of the local nodes only. Nodes on remote machines will not be run.  </para></listitem></itemizedlist><para><code>--screen</code> </para><itemizedlist><listitem override="none"><para>Force all node output to screen. Useful for node debugging. </para></listitem></itemizedlist><para><code>-v</code>  </para><itemizedlist><listitem override="none"><para>Enable verbose printing. Useful for tracing roslaunch file parsing.  </para></listitem></itemizedlist><para><code>--dump-params</code>  </para><itemizedlist><listitem override="none"><para>Print parameters in launch file in YAML format. </para></listitem></itemizedlist></section><section><title>Passing in args</title><para>If the file you are launching specifies <ulink url="http://wiki.ros.org/roslaunch/Commandline%20Tools/roslaunch/XML/arg#">args</ulink> that require setting, you can do so using an identical syntax to ROS remapping arguments, e.g.: </para><screen><![CDATA[roslaunch my_file.launch arg:=value]]></screen></section><section><title>Non-launch options</title><para>The following options provide information about a launch file without actually doing a launch. These options use the same launch-file resolution as the regular <code>roslaunch</code> command. You can either specify the file path of the launch file, or you can specify a package name and launch file in that package, e.g. for the <code>example.launch</code> file in the <code>roslaunch</code> package, you can use: </para><itemizedlist><listitem override="none"><screen><![CDATA[roslaunch --nodes roslaunch $ROS_ROOT/tools/roslaunch/example.launch]]></screen><para> or </para><screen><![CDATA[roslaunch --nodes roslaunch example.launch]]></screen></listitem></itemizedlist><para><code>--nodes &lt;package-name&gt; &lt;launch-file&gt;</code></para><para> <code>--nodes &lt;launch-file&gt;</code> </para><itemizedlist><listitem override="none"><para>List nodes by 'name' that are in <code>&lt;launch-file&gt;</code>. This is useful for figuring out the node name to pass to <code>--args</code>. </para></listitem></itemizedlist><para><code>--args &lt;node-name&gt; &lt;package-name&gt; &lt;launch-file&gt;</code></para><para> <code>--args &lt;node-name&gt; &lt;launch-file&gt;</code> </para><itemizedlist><listitem override="none"><para>Display the command-line arguments that <code>roslaunch</code> uses when launching the node in <code>&lt;launch-file&gt;</code> named <code>&lt;node-name&gt;</code>. This is handy if you just want to launch that particular node for debugging, e.g. </para><screen><![CDATA[$ roslaunch --args my_node file.launch | bash]]></screen><para>You can also use this option with substitution args (for bash, you have to be careful to use single-quotes instead of double-quotes): </para><screen><![CDATA[$ roslaunch --args '$(anon my_node)' file.launch]]></screen></listitem></itemizedlist><para><code>--find &lt;node-name&gt; &lt;package-name&gt; &lt;launch-file&gt;</code> </para><para> <code>--find &lt;node-name&gt; &lt;launch-file&gt;</code>  </para><itemizedlist><listitem override="none"><para>Print name of launch file that the node named <code>&lt;node-name&gt;</code> is defined in. Launch files often have many includes, which can make it difficult to find where an actual <code>&lt;node&gt;</code> definition resides. For example: </para><screen><![CDATA[$ roslaunch --find /included/talker roslaunch example.launch]]></screen></listitem></itemizedlist><para><code>--files &lt;filename&gt;</code>  </para><itemizedlist><listitem override="none"><para>Print all files included in processing <code>&lt;filename&gt;</code>, including the file itself. This is useful for passing to other command line tools, e.g. </para><screen><![CDATA[$ roslaunch --files foo.launch | xargs grep stuff]]></screen></listitem></itemizedlist></section><section><title>Internal-use only options</title><para><code>roslaunch</code> uses several command-line options that are for internal use only, including <code>-c</code>, <code>-u</code>, and <code>--core</code>. </para></section><section><title>Environment Variables (advanced users)</title><para><emphasis>NOTE: this section is intended for advanced users only</emphasis> </para><itemizedlist><listitem override="none"><para><code>ROSLAUNCH_SSH_UNKNOWN</code>  </para><itemizedlist><listitem override="none"><para>When launching on remote machines, SSH requires that the remote machine's key be stored in the local <code>known_hosts</code> file. You can set <code>roslaunch</code> to ignore this constraint and allow connections to machines for which you don't have keys established. This is a dangerous option as it introduces a security hole and should only be used if you understand the consequences. </para></listitem></itemizedlist></listitem></itemizedlist></section></section><section><title>roslaunch-deps</title><para><code>roslaunch-deps</code> reports which ROS <ulink url="http://wiki.ros.org/roslaunch/Commandline%20Tools/Packages#">Packages</ulink> a <code>.launch</code> file depends on. It can also track down command build problems, such as missing dependencies in package <ulink url="http://wiki.ros.org/roslaunch/Commandline%20Tools/Manifest#">manifests</ulink>. One command you may wish to run is to build all the packages necessary for a launch file: </para><screen><![CDATA[rosmake `roslaunch-deps file.launch`]]></screen><section><title>Usage</title><para>To get warnings about dependencies missing in manifest files, run with the -w warn option: </para><screen><![CDATA[$ roslaunch-deps -w file.launch]]></screen><para>To get more verbose output to help track where a dependency is coming from, run with the -v verbose option: </para><screen><![CDATA[$ roslaunch-deps -v file.launch]]></screen></section></section><section><title>roslaunch-logs</title><para>Roslaunch stores log files for a particular run together in a subdirectory of the ROS log directory (<code>$ROS_ROOT/log</code> or <code>$ROS_LOG_DIR</code>). In general, logs files are stored in <code>ROS_LOG_DIR/run_id</code>, where <code>run_id</code> is a unique ID associated with a particular run of a roscore.  </para><section><title>Usage</title><para><code>roslaunch-logs</code> is meant to be used together with the 'cd' command, e.g. </para><screen><![CDATA[cd `roslaunch-logs`]]></screen><para>You can type this command to quickly go to the directory with the log files for your nodes. </para></section></section></article>